services:
  db:
    image: mongo:8.0.6
    command: mongod --quiet --logpath /dev/null
    volumes:
      - dbdata:/data/db/
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
    networks:
      - service_net
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongo-express:
    image: mongo-express:1.0.2-18-alpine3.18
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASS}@db:27017
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_AUTH_USERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_AUTH_PASSWORD: ${MONGO_ROOT_PASS}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGOEXPRESS_LOGIN}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGOEXPRESS_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "127.0.0.1:8081:8081"
    networks:
      - service_net

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: my_flask_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      MONGO_URI: mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASS}@db:27017/${MONGO_DB_NAME}?authSource=admin
      FLASK_SECRET_KEY: ${FLASK_SECRET_KEY}
      FLASK_APP: app.run
      FLASK_DEBUG: ${FLASK_DEBUG}
      PYTHONUNBUFFERED: 1
    ports:
      - "127.0.0.1:${FLASK_LISTEN_PORT:-5000}:5000"
    networks:
      - service_net
    volumes:
      - datasets:/app/datasets

volumes:
  dbdata:
  datasets:

networks:
  service_net:
    driver: bridge